from TurnstileHandler_generated import DefaultTurnstileHandler


class Stepper():

    def __init__(self):
        self.currentState = "{{ initialState }}"
        self.fsm = dict()
        self.handler = DefaultTurnstileHandler()
        {% for transition in transitions %}self.add("{{ transition[0] }}", "{{ transition[1] }}", "{{ transition[2] }}", "{{ transition[3] }}")
        {% endfor %}

    def add(self, fromState, input, action, toState):
        if not fromState in self.fsm:
            self.fsm[fromState] = dict()
            self.fsm[fromState]["transitions"] = dict()
        self.fsm[fromState]["transitions"][input] = (action, toState)

    def step(self, input):
        (action, targetState) = self.fsm[self.currentState]["transitions"][input]
        print "from: "+self.currentState+", input: "+input+" to: "+targetState
        self.handler.handle(action)
        self.currentState = targetState

